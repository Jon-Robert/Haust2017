1. 
 for - endurtekur sig þangað til að condition er náð og breytt í false.
 for (i = 0, i < 4, i++) t.d.

 for in - fer yfir probities names 
 for ( varible in object) t.d.

 for of - fer yfir probities values
 for ( varible of object) t.d

 sma dæmi 

var arr = [3, 5, 7];
arr.foo = 'hello';

for (var i in arr) {
   console.log(i); // logs "0", "1", "2", "foo"
}

for (var i of arr) {
   console.log(i); // logs 3, 5, 7
}


3.
basicly gerir string til að lesa miklu betri en það hefbundna
console.log("hallo
heimur");

myndi koma út sem error í þessu tilviki

console.log(`hallo
	heimur`); 
	myndi koma út sem: 

hallo
	heimur 

þannig sé með breakline og whitespace
svo er líka hægt að gera 
var foo = "bar";
console.log(`hallo hemur ${foo}); 
sem myndi koma sem:: hallo heimur bar 

þannig sé place holdur í staðinn fyrir 
("hallo heimur "+foo);

4. 
var myMap = new Map();
myMap.set(function() {}, 'baz');
console.log(myMap);

5.



6. 

var passed = 3;

var addTo = funtion (){
	var inner = 2;
	return passed + inner;
};

console.log(addTo()); // myndi returna 5 

in javascript varibles are defined outside the function are automaticly available inside the function becasue javascript uses something called lexical scoping 
means varible defined inner is not accessible outside but something defined outside is accessible inside

the way it does this is with closure


varðandi hvað þetta væri sniðugt fyrir er ég ekki alveg viss en það væri sniðugt til að halda öllum varibles á svipuðum stað ef það þarf að breyta því oft, og líka að það lifir lengur 


